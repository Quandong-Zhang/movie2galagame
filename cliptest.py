# 导入所需要的库
from cv2 import cv2
import numpy as np


#L=[278, 327, 370, 420, 477, 574, 713, 776, 904, 1091, 1117, 1238, 1510, 1656, 1850, 1920, 1994, 2057, 2139, 2198, 2265, 2378, 2454, 2565, 2758, 2826, 2905, 2954, 3041, 3129, 3152, 3193, 3228, 3265, 3302, 3325, 3358, 3406, 3443, 3486, 3540, 3592, 3658, 3725, 3788, 3861, 3928, 3944, 4229, 4693, 4900, 4984, 5086, 5152, 5219, 5385, 5428, 5496, 5549, 5579, 5600, 5634, 5685, 5743, 5829, 5843, 5917, 6008, 6120, 6221, 6380, 6493, 6619, 7043, 7135, 7215, 7280, 7522, 7578, 7644, 7765, 7832, 8330, 8414, 8484, 8591, 8659, 8722, 8763, 8854, 8901, 8938, 9021, 9106, 9215, 9749, 9814, 9963, 10037, 10087, 10160, 10487, 10545, 10596, 10631, 10670, 10757, 10824, 10861, 10894, 10937, 11017, 11140, 11316, 11380, 11456, 11534, 11530, 11588, 11717, 11810, 11921, 11979, 12049, 12240, 12379, 12542, 12633, 12869, 13014, 13227, 13258, 13288, 13378, 13484, 13573, 13653, 14301, 14406, 14479, 14577, 14678, 14744, 14819, 14897, 14987, 15094, 15148, 15255, 15391, 15511, 15718, 15744, 15803, 15900, 16003, 16097, 16164, 16247, 16323, 16428, 16547, 16750, 16851, 17041, 17434, 17545, 17654, 17780, 17842, 17931, 17994, 18101, 18135, 18197, 18280, 18328, 18883, 18959, 19011, 19066, 19169, 19177, 19291, 19899, 19985, 20034, 20101, 20262, 20487, 20588, 20669, 20749, 21002, 21154, 21230, 21318, 21403, 21481, 21559, 21602, 21665, 21755, 22179, 22369, 22527, 22621, 22735, 22823, 22900, 22979, 24410, 25306, 25372, 25428, 25483, 25545, 25605, 25660, 25714, 25766, 25827, 25996, 26069, 26114, 26212, 26440, 26569, 26646, 26721, 26809, 26900, 27010, 27159, 27655, 27809, 28746, 29490, 29560, 29627, 29693, 29734, 29752, 29852, 29953, 30035, 30193, 30338, 30399, 30424, 30461, 30494, 30544, 30723, 30772, 30810, 30840, 30861, 30919, 30974, 31112, 31156, 31205, 31239, 31847, 31894, 31936, 32149, 32212, 32444, 32719, 32828, 32964, 33085, 33242, 33335, 33416, 33583, 33689, 33722, 33808, 33999, 34136, 34692, 34837, 34920, 35045, 35223, 35259, 35377, 35468, 35539, 35592, 35990, 36127, 36221, 36515, 36624, 36719, 37317, 38911, 38960, 39014, 39056, 39807, 40174, 40219, 40261, 40307, 40344, 40379, 40451, 40514, 40544, 40656, 40709, 40764, 40882, 40955, 41016, 41057, 41103, 41133, 41186, 41236, 41287, 41327, 42021, 42088, 42146, 42195, 42247, 42292, 42397, 42920, 42954, 42988, 43697, 43752, 43788, 43822, 43898, 43987, 44119, 44219, 44321, 44517, 44625, 44671, 44731, 44778, 44824, 44877, 44953, 45036, 45095, 45135, 45175, 45222, 45280, 45388, 45433, 45504, 45556, 45637, 45716, 45748, 45809, 46113, 46167, 46206, 46364, 46721, 46756, 46791, 47510, 47587, 47632, 47772, 47819, 47870, 47931, 47996, 48037, 48138, 48178, 48223, 48306, 48867, 49014, 49680, 49717, 49752, 50524, 50628, 50668, 50701, 50763, 50815, 50862, 50930, 50979, 51013, 51090, 51225, 51291, 51355, 51409, 51463, 51502, 51535, 51579, 51667, 51733, 51765, 51785, 51817, 51874, 51928, 51964, 52023, 52068, 52105, 52162, 52369, 52398, 53630, 53702, 53788, 53882, 53954, 54019, 54557, 54624, 54655, 54697, 54845, 54931, 54971, 55046, 55176, 55316, 55397, 55525, 55769, 55854, 56150, 56177, 56212, 56247, 56269, 56400, 57357, 57389, 57439, 57498, 57558, 57595, 58077, 58171, 58307, 58374, 58430, 58515, 59037, 59460, 59545, 59603, 59663, 59714, 59783, 59887, 60081, 60147, 60442, 60499, 60563, 60608, 60647, 61245, 61577, 61782, 61904, 62149, 62193, 62262, 62321, 62369, 62399, 62437, 62471, 62542, 62597, 62644, 62691, 62737, 62790, 62847, 63760, 64075, 64100, 64145, 64184, 64266, 64402, 66795, 66876, 66955, 67194, 67363, 67620, 68033, 68085, 68234, 68631, 68701, 68794, 68887, 69058, 69382, 69839, 71216, 71276, 71327, 73624, 73696, 73736, 73784, 73819, 73863, 73943, 73999, 74056, 74609, 74714, 74812, 75879, 75903, 75927, 75959, 75994, 76149, 76173, 76200, 76222, 76475, 76539, 76614, 76660, 76711, 77303, 77370, 77414, 77581, 77933, 78004, 78099, 78187, 78231, 78324, 78485, 78577, 78649, 78698, 79370, 79425, 79509, 79610, 79714, 79833, 79911, 79973, 80060, 80122, 80239, 80253, 80370, 80458, 80591, 80721, 80841, 81215, 81395, 81566, 81747, 81926, 82058, 82146, 82279, 82408, 82524, 82869, 83265, 83401, 83490, 83623, 83755, 83840, 83975, 84103, 84190, 84323, 84451, 84539, 84674, 84805, 84892, 85024, 85159, 85287, 90167]

  
# 定义保存图片函数
# image:要保存的图片名字
# addr；图片地址与相片名字的前部分
# num: 相片，名字的后缀。int 类型
def save_image(image,addr,num):
  address = addr + str(num)+ '.jpg'
  cv2.imwrite(address,image)


def getpic(L,name):
  # 读取视频文件
  videoCapture = cv2.VideoCapture(name)
  # 通过摄像头的方式
  # videoCapture=cv2.VideoCapture(1)
  #读帧
  success, frame = videoCapture.read()
  i = 0
  timeF = 1
  j=0
  while success :
    i = i + 1
    if i in L:
      j = j + 1
      save_image(frame,'./images/b',j)
      print('保存第:',i)
    success, frame = videoCapture.read()